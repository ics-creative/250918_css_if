/* --colorの値がprimaryなら赤、それ以外は青 */
.hoge {
  background-color: if(style(--color: primary): red; else: blue;);
}

/* 画面幅が768px以下のときは赤、それ以外は青 */

.fuga {
  background-color: if(media(width <= 768px): red; else: blue;);
}

/* display: gridが使えるときは赤、それ以外は青 */
.piyo {
  background-color: if(supports(display: grid): red; else: blue;);
}

/* ボタンバリアントのスタイル。バリアントに応じて背景色、ボーダー色、文字色が変化する */
.buttonVariant {
  background-color: if(
    style(--variant: primary): var(--color-primary) ;
      style(--variant: secondary): var(--color-secondary) ;
      style(--variant: tertiary): transparent;
  );
  border-color: if(
    style(--variant: primary): var(--color-primary) ;
      style(--variant: secondary): var(--color-secondary) ;
      style(--variant: tertiary): var(--color-tertiary) ;
  );
  color: if(
    style(--variant: tertiary): var(--color-text) ;
      else: var(--color-text-inverted)
  );
}

/* ボタンバリアントのスタイル 別の書き方 */
.buttonVariant {
  --background-color: if(
    style(--variant: primary): var(--color-primary) ;
      style(--variant: secondary): var(--color-secondary) ;
      style(--variant: tertiary): transparent;
  );
  --border-color: if(
    style(--variant: primary): var(--color-primary) ;
      style(--variant: secondary): var(--color-secondary) ;
      style(--variant: tertiary): var(--color-tertiary) ;
  );
  --text-color: if(
    style(--variant: tertiary): var(--color-text) ;
      else: var(--color-text-inverted)
  );

  background-color: var(--background-color);
  border-color: var(--border-color);
  color: var(--text-color);
}

.typography {
  font-size: if(
    style(--font-size: display): 48px; style(--font-size: heading): 32px;
      style(--font-size: body): 16px; style(--font-size: small): 14px;
      else: 16px;
  );
  font-weight: if(
    style(--font-weight: bold): 700; style(--font-weight: regular): 400;
      else: 400;
  );
}

.fontSize-display {
  --font-size: display;
}

.fontSize-heading {
  --font-size: heading;
}

.fontSize-body {
  --font-size: body;
}

.fontSize-small {
  --font-size: small;
}

.fontWeight-bold {
  --font-weight: bold;
}

.fontWeight-regular {
  --font-weight: regular;
}

/** 3種類のバリアントに非活性・ホバーのスタイルがある場合 */

.buttonComplexVariant {
  &:disabled {
    --isDisabled: true;
  }
  &:hover {
    --isHover: true;
  }
}

.buttonComplexVariant {
  background-color: if(
    style(--variant: primary): if(
        style(--isDisabled: true): var(--color-primary-disabled) ;
          style(--isHover: true): var(--color-primary-hover) ;
          else: var(--color-primary) ;
      )
      ;
      style(--variant: secondary): if(
        style(--isDisabled: true): var(--color-secondary-disabled) ;
          style(--isHover: true): var(--color-secondary-hover) ;
          else: var(--color-secondary) ;
      )
      ;
      style(--variant: tertiary): if(
        style(--isDisabled: true): transparent;
          style(--isHover: true): var(--color-tertiary-hover) ;
          else: transparent;
      )
      ;
  );
  border-color: if(
    style(--variant: primary): if(
        style(--isDisabled: true): var(--color-primary-disabled) ;
          style(--isHover: true): var(--color-primary-hover) ;
          else: var(--color-primary) ;
      )
      ;
      style(--variant: secondary): if(
        style(--isDisabled: true): var(--color-secondary-disabled) ;
          style(--isHover: true): var(--color-secondary-hover) ;
          else: var(--color-secondary) ;
      )
      ;
      style(--variant: tertiary): if(
        style(--isDisabled: true): var(--color-tertiary-disabled) ;
          style(--isHover: true): var(--color-tertiary-hover) ;
          else: var(--color-tertiary) ;
      )
      ;
  );
  color: if(
    style(--variant: tertiary): if(
        style(--isDisabled: true): var(--color-text-disabled) ;
          else: var(--color-text)
      )
      ; else: var(--color-text-inverted)
  );
}
